/*! For license information please see vanilla.eb8d07af.js.LICENSE.txt */
"use strict";!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.Cookies=n():e.Cookies=n()}(self,(()=>(self.webpackChunkCookies=self.webpackChunkCookies||[]).push([["vanilla"],{799:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnimalityAPI: () => (/* binding */ AnimalityAPI),\n/* harmony export */   CatAPI: () => (/* binding */ CatAPI),\n/* harmony export */   ShibeAPI: () => (/* binding */ ShibeAPI)\n/* harmony export */ });\nasync function ShibeAPI() {\r\n  let apiUrl = \'https://shibe.online/api/cats?count=3\';\r\n  fetch(apiUrl)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      // Assuming element IDs for slides are: slide1, slide2, and slide3\r\n      document.getElementById("slide1").src = data[0];\r\n      document.getElementById("slide2").src = data[1];\r\n      document.getElementById("slide3").src = data[2];\r\n    })\r\n}\r\nasync function CatAPI() {\r\n  let apiUrl = \'https://api.thecatapi.com/v1/images/search?limit=10\';\r\n  const response = await fetch(apiUrl);\r\n  const data = await response.json();\r\n  const urls = data.map(image => image.url);\r\n  document.getElementById(\'slide1\').src = urls[0];\r\n  document.getElementById(\'slide2\').src = urls[1];\r\n  document.getElementById(\'slide3\').src = urls[2];\r\n}\r\nasync function AnimalityAPI() {\r\n  try {\r\n    const response = await fetch("https://api.animality.xyz/img/cat");\r\n    const data = await response.json();\r\n    const imageUrl = data.link;\r\n    document.getElementById("slide1").setAttribute("src", imageUrl);\r\n    document.getElementById("slide2").setAttribute("src", imageUrl + "?2");\r\n    document.getElementById("slide3").setAttribute("src", imageUrl + "?3");\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\n\n//# sourceURL=webpack://Cookies/./src/js/apilist.js?')},647:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCookie: () => (/* binding */ getCookie)\n/* harmony export */ });\nfunction getCookie(name) { // function to get the value of a cookie\r\n  let cookieValue = "";\r\n  const cookies = document.cookie.split(";"); // split all cookies into an array\r\n  \r\n  cookies.forEach((cookie) => { // loop through each cookie\r\n    let [cookieName, cookieVal] = cookie.split("="); // get cookie\'s name and value\r\n    cookieName = cookieName.trim(); // remove leading/trailing whitespaces\r\n   \r\n    if (cookieName === name) { // if cookie\'s name is the required one\r\n      cookieValue = cookieVal; // save its value\r\n    }\r\n      \r\n  });\r\n\r\n  return cookieValue; // return cookie\'s value\r\n}\n\n//# sourceURL=webpack://Cookies/./src/js/shared.js?')},225:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _apilist_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apilist.js */ 799);\n/* harmony import */ var _shared_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared.js */ 647);\n\r\n// Import functions\r\n\r\n\r\n\r\n// Get the value of the \"color\" cookie\r\nconst colorValue = (0,_shared_js__WEBPACK_IMPORTED_MODULE_1__.getCookie)('color');\r\n\r\n\r\n// Apply the color value as the background color globally\r\nif (colorValue) {\r\n  document.body.style.backgroundColor = colorValue;\r\n}\r\n\r\n// cache frequently used DOM elements\r\nconst btnDeathMode = document.querySelector('.btn-container');\r\nconst buttonRefresh = document.querySelector('.btn-refr');\r\nconst slides = document.querySelectorAll(\".slide\");\r\nconst nextSlide = document.querySelector(\".btn-next\");\r\nconst prevSlide = document.querySelector(\".btn-prev\");\r\n\r\n// declare variables\r\nconst animation = 'animate__tada';\r\nconst duration = '0.5s';\r\nlet curSlide = 0;\r\nconst maxSlide = slides.length - 1;\r\n\r\n// add event listener to toggle class and change css property\r\nbtnDeathMode.addEventListener('click', function() {\r\n  btnDeathMode.classList.add(animation);\r\n  btnDeathMode.style.animationDuration = duration;\r\n  setTimeout(function() {\r\n    btnDeathMode.classList.remove(animation);\r\n  }, 550);\r\n  document.querySelector('body').classList.toggle('narc-bg');\r\n  document.querySelector('.musicOn').classList.toggle('show');\r\n  document.querySelector('h1').classList.toggle('nn');\r\n});\r\n\r\n// add event listener to fetch cat images and refresh slides\r\nbuttonRefresh.addEventListener('click', fetchCatImages);\r\n\r\n// loop through slides and set each slides translateX\r\nslides.forEach((slide, indx) => {\r\n  slide.style.transform = `translateX(${indx * 100}%)`;\r\n});\r\n\r\n// add event listener and navigation functionality for next slide button\r\nnextSlide.addEventListener(\"click\", function() {\r\n  if (curSlide === maxSlide) {\r\n    fetchCatImages();\r\n    curSlide = 0;  \r\n  } else {\r\n    curSlide++;\r\n  }\r\n  slides.forEach((slide, indx) => {\r\n    slide.style.transform = `translateX(${100 * (indx - curSlide)}%)`;\r\n  });\r\n});\r\n\r\n// add event listener and navigation functionality for previous slide button\r\nprevSlide.addEventListener(\"click\", function() {\r\n  if (curSlide === 0) {\r\n    curSlide = maxSlide;\r\n  } else {\r\n    curSlide--;  \r\n  }\r\n  slides.forEach((slide, indx) => {\r\n    slide.style.transform = `translateX(${100 * (indx - curSlide)}%)`;\r\n  });\r\n});\r\n\r\n// check if URL param 'free=1' is present and redirect\r\nif (window.location.search.includes('free=1')) {\r\n  if (confirm(\"Don't forget to use VPN\") == true) {\r\n    window.location.href = 'https://free.navalny.com';\r\n  }\r\n}\r\n\r\nasync function fetchCatImages() {\r\n  // Get the value of the \"CurAPI\" cookie\r\n  let curAPIValue = (0,_shared_js__WEBPACK_IMPORTED_MODULE_1__.getCookie)('CurAPI');\r\n  // Check if the \"CurAPI\" cookie exists\r\n  if (!curAPIValue) {\r\n    // Create the \"CurAPI\" cookie with the default value \"catapi\"\r\n    document.cookie = 'CurAPI=catapi';\r\n    curAPIValue = 'catapi';\r\n  }\r\n  // Apply the corresponding API function based on the cookie value\r\n  if (curAPIValue === 'catapi') {\r\n    await _apilist_js__WEBPACK_IMPORTED_MODULE_0__.CatAPI();\r\n  } else if (curAPIValue === 'shibe') {\r\n    await _apilist_js__WEBPACK_IMPORTED_MODULE_0__.ShibeAPI();\r\n  } else if (curAPIValue === 'animality') {\r\n    await _apilist_js__WEBPACK_IMPORTED_MODULE_0__.AnimalityAPI();\r\n  }\r\n}\r\n\r\nfetchCatImages();\r\n\n\n//# sourceURL=webpack://Cookies/./src/js/vanilla.js?")}},e=>{var n;return n=225,e(e.s=n)}])));